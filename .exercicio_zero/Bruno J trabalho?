#include <stdio.h>
#include <string.h>
#include <stdlib.h>

typedef struct nodo
{
  void *dado;
  int data_size;
  struct nodo *prox;
  struct nodo *ante;
}nodo;

nodo *head = NULL;
nodo *tail = NULL;
nodo *posicao = NULL;

//ALERTA, NÃO GENÉRICO//

void Lista_new(nodo* lista, int data_size, void (*free_data)(void*)/*?*/)
{
  nodo *novol = (nodo*)malloc(sizeof(data_size));
  novol -> dado = dado;
  novol -> data_size = data_size;
  novol -> prox = NULL;
  novol -> ante = NULL;
  head = tail = posicao = novol;
}

void Lista_delete(nodo* lista)
{
  
  free(lista);
}

int Lista_isEmpty() /*Parece pronto*/
{
  if(head == NULL)
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

int Lista_size(nodo *lista) /*Parece pronto*/
{
  if(Lista_isEmpty() == 1)
    {
      return 0;
    }
  nodo *aux = lista;
  int tam = 0;

  while(aux != tail)
    {
      aux = aux -> prox;
      tam++;
    }
  return tam;
}

int Lista_search(nodo* lista, void* chave, void* dest, int (*cmp)(void*,void*))
{
  nodo *aux = lista;
  int cont = 0;
  while(aux != chave)
    {
      aux = aux -> prox;
      dest = aux;
      cont++;
    }
  return cont/*?*/ ;
}

void Lista_pushFront(nodo* lista, void* valor)
{

}

void Lista_pushBack(nodo* lista, void* valor)
{
  if(Lista_search() > (Lista_size() / 2))
  {
    nodo *aux = tail;
    int cont = 0;
    while(cont != (Lista_size() - Lista_search()) + 1 )
      {
        aux = aux -> ante;
      }
    aux -> prox = aux -> prox -> prox;
    aux = aux -> prox;
    tail -> prox = aux;
  }
  else
  {
    nodo *aux = head;
    int cont = 0;
    while(cont != Lista_search() - 1)
      {
        aux = aux -> prox;
      }
    aux -> prox = aux -> prox -> prox;
    aux = aux -> prox;
    tail -> prox = aux;
  }
}


void Lista_first(nodo* lista) /*Parece pronto*/
{
  posicao = head;
  printf("%p\n", (void*)head);
}

void Lista_last(nodo* lista) /*Parece pronto*/
{
  posicao = tail;
  printf("%p\n", (void*)tail);
}

void Lista_current(nodo* lista, void* dest) /*Parece pronto*/
{
  printf("%p\n", posicao);
}

int Lista_next(nodo* lista) /*Parece pronto*/
{
  posicao = posicao -> prox;
  printf("%p\n", posicao);
}

void Lista_remove(nodo* lista, void* chave, int (*cmp)(void*,void*))
{
  Lista_search();

  free();
}

void Lista_insertAfter(nodo* lista, int data_size, void* dado)
{
  nodo *novo = (nodo*)malloc(sizeof(data_size));
  novo -> dado = dado;
  novo -> data_size = data_size;
  novo -> prox = NULL;
  novo -> ante = posicao;
  if(posicao == tail)
  {
    tail = novo;
  }
}

int main(void) {
  printf("Hello World\n");

  Lista_delete();
  return 0;
}
